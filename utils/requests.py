from typing import Optional
from config import REQUESTS_GROUP
from create_bot import bot
from states.states_group import FSMRequest
from database.user_db_methods import get_user_details
from keyboards.navigation_keyboards import skip_back_keyboard, back_keyboard


async def request_address(tg_id: int) -> None:
    """
    –í—ã–∑–æ–≤ –ø–µ—Ä–≤–æ–≥–æ —à–∞–≥–∞ –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏.

    :param tg_id: id —é–∑–µ—Ä–∞ –≤ Telegram
    :type tg_id: int
    :return: None
    """

    await FSMRequest.request_address.set()
    await bot.send_message(tg_id, "<b><i>–®–∞–≥ 1/3.</i></b> üìù–ù–∞–ø–∏—à–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä –ø—Ä–æ–±–ª–µ–º—ã (—É–ª–∏—Ü—É, –Ω–æ–º–µ—Ä –¥–æ–º–∞,"
                                  "–ø–æ–¥—ä–µ–∑–¥, —ç—Ç–∞–∂, –∏ –∫–≤–∞—Ä—Ç–∏—Ä—É) –∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç:",
                           reply_markup=skip_back_keyboard(),
                           parse_mode='HTML')


async def request_media(tg_id: int) -> None:
    """
    –í—ã–∑–æ–≤ –≤—Ç–æ—Ä–æ–≥–æ —à–∞–≥–∞ –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏.

    :param tg_id: id —é–∑–µ—Ä–∞ –≤ Telegram
    :type tg_id: int
    :return: None
    """

    await FSMRequest.request_media.set()
    await bot.send_message(tg_id, "<b><i>–®–∞–≥ 2/3.</i></b> üñª–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –≤–∏–¥–µ–æ –∏–ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∫ —Å–≤–æ–µ–π –∑–∞—è–≤–∫–µ"
                                  "–∏–ª–∏ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç –ø—É–Ω–∫—Ç:",
                           reply_markup=skip_back_keyboard(),
                           parse_mode='HTML')


async def request_issue(tg_id: int) -> None:
    """
    –í—ã–∑–æ–≤ —Ç—Ä–µ—Ç—å–µ–≥–æ —à–∞–≥–∞ –¥–ª—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏.

    :param tg_id: id —é–∑–µ—Ä–∞ –≤ Telegram
    :type tg_id: int
    :return: None
    """

    await FSMRequest.request_description.set()
    await bot.send_message(tg_id, "<b><i>–®–∞–≥ 3/3.</i></b> üìõ–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è—Ö:",
                           reply_markup=back_keyboard(),
                           parse_mode='HTML')


async def send_request_to_admins(tg_id: int,
                                 address: Optional[str],
                                 photo: Optional[str],
                                 video: Optional[str],
                                 issue: str) -> None:
    """
    –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞—è–≤–∫–∏ –∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç

    :param tg_id: id —é–∑–µ—Ä–∞ –≤ Telegram
    :type tg_id: int
    :param address: –∞–¥—Ä–µ—Å (–µ—Å–ª–∏ –±—ã–ª —É–∫–∞–∑–∞–Ω)
    :type address: Optional[str]
    :param photo: —Ñ–æ—Ç–æ –∑–∞—è–≤–∫–∏ (–µ—Å–ª–∏ –±—ã–ª–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–æ)
    :type photo: Optional[str]
    :param video: –≤–∏–¥–µ–æ –∑–∞—è–≤–∫–∏ (–µ—Å–ª–∏ –±—ã–ª–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–æ)
    :type video: Optional[str]
    :param issue: –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
    :type issue: str
    :return: None
    """

    user_details = get_user_details(tg_id)
    username = user_details['username']
    name = user_details['name']
    surname = user_details['surname']
    phone = user_details['phone']

    if address:
        address_line = f'<b><i>–ê–¥—Ä–µ—Å:</i></b> {address}\n'
    else:
        address_line = ''

    text_line = f'‚õî<b>–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –∂–∞–ª–æ–±–∞</b>\n' \
                f'@{username}\n' \
                f'<b><i>–ò–º—è –∏ –§–∞–º–∏–ª–∏—è:</i></b> {name} {surname}\n' \
                f'<b><i>–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</i></b> {phone}\n' \
                f'{address_line}' \
                f'<b><i>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</i></b> {issue}\n'

    if photo:
        await bot.send_photo(REQUESTS_GROUP, photo, caption=text_line, parse_mode='HTML')
    elif video:
        await bot.send_video(REQUESTS_GROUP, video, caption=text_line, parse_mode='HTML')
    else:
        await bot.send_message(REQUESTS_GROUP, text_line, parse_mode='HTML')
